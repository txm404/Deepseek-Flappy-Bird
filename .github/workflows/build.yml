name: Build Python Executable

on:
  push:
    branches: [ main ] # Or your default branch name if different

# Add permissions for creating releases
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest # Use Linux runner for bin

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # Specify a Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nuitka pygame

    - name: Build with Nuitka
      run: python -m nuitka --standalone --follow-imports --output-dir=build_output main.py
      # Note: If you encounter issues with missing data files (like fonts),
      # you might need to add --include-data-files or --include-package-data options.
      # For system fonts like 'Noto Sans CJK TC', ensure the target system has them,
      # or bundle a font file with --include-data-files=path/to/font.ttf=font.ttf
      # and modify main.py to load the bundled font.

    - name: Package executable
      shell: bash # Use Bash for zip on Linux
      run: |
        cd build_output/main.dist
        zip -r ../../main-linux-${{ github.sha }}.zip .
        cd ../.. # Go back to the root directory

    - name: Create Release and Upload Asset
      uses: softprops/action-gh-release@v2
      with:
        files: main-linux-${{ github.sha }}.zip
        tag_name: build-${{ github.run_number }}-${{ github.sha }} # Create a unique tag
        name: Linux Build ${{ github.run_number }} (${{ github.sha }})
        body: Automated build of main.py for Linux. Triggered by commit ${{ github.sha }}.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is automatically provided by GitHub
